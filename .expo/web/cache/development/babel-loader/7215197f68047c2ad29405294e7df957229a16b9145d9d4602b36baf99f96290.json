{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NativeForm = function NativeForm() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    passwaord = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    show = _useState8[0],\n    setShow = _useState8[1];\n  var CleraData = function CleraData() {\n    setShow(false);\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n  return _jsxs(View, {\n    style: styleForm.viewContainer,\n    children: [_jsx(Text, {\n      style: styleForm.text,\n      children: \"Simple Form in React Native\"\n    }), show ? _jsxs(View, {\n      style: styleForm.formOpBox,\n      children: [_jsxs(Text, {\n        children: [\"Name : \", name]\n      }), _jsxs(Text, {\n        children: [\"Email : \", email]\n      }), _jsxs(Text, {\n        children: [\"Passwaord : \", passwaord]\n      })]\n    }) : null, _jsxs(View, {\n      style: styleForm.formBox,\n      children: [_jsx(TextInput, {\n        style: styleForm.formTextInput,\n        placeholder: \"Enter User Name\",\n        value: name,\n        onChangeText: function onChangeText(e) {\n          return setName(e);\n        }\n      }), _jsx(TextInput, {\n        style: styleForm.formTextInput,\n        placeholder: \"Enter User Email\",\n        value: email,\n        onChangeText: function onChangeText(e) {\n          return setEmail(e);\n        }\n      }), _jsx(TextInput, {\n        secureTextEntry: true,\n        style: styleForm.formTextInput,\n        placeholder: \"Enter User Passwaord\",\n        value: passwaord,\n        onChangeText: function onChangeText(e) {\n          return setPassword(e);\n        }\n      }), _jsx(View, {\n        style: styleForm.btnBox,\n        children: _jsx(Button, {\n          title: \"Print Data\",\n          onPress: function onPress() {\n            return setShow(true);\n          }\n        })\n      }), _jsx(View, {\n        style: styleForm.btnBox,\n        children: _jsx(Button, {\n          title: \"clear Data\",\n          color: 'red',\n          onPress: CleraData\n        })\n      })]\n    })]\n  });\n};\nvar styleForm = StyleSheet.create({\n  viewContainer: {\n    padding: 5\n  },\n  formBox: {\n    marginTop: 10,\n    padding: 10,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    elevation: 2\n  },\n  formOpBox: {\n    marginTop: 10,\n    padding: 10,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    elevation: 2\n  },\n  text: {\n    alignSelf: \"center\",\n    textAlignVertical: \"center\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"red\"\n  },\n  formTextInput: {\n    marginTop: 10,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    fontSize: 15,\n    padding: 5,\n    textAlignVertical: \"center\"\n  },\n  btnBox: {\n    marginTop: 15\n  }\n});\nexport default NativeForm;","map":{"version":3,"names":["React","useState","Button","StyleSheet","Text","TextInput","View","jsx","_jsx","jsxs","_jsxs","NativeForm","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","passwaord","setPassword","_useState7","_useState8","show","setShow","CleraData","style","styleForm","viewContainer","children","text","formOpBox","formBox","formTextInput","placeholder","value","onChangeText","e","secureTextEntry","btnBox","title","onPress","color","create","padding","marginTop","borderColor","borderWidth","elevation","alignSelf","textAlignVertical","fontSize","fontWeight"],"sources":["C:/Users/Deepak/Documents/GitHub/React-Native-tut/components/NativeForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, StyleSheet, Text, TextInput, View } from 'react-native'\r\n\r\nconst NativeForm = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [passwaord, setPassword] = useState(\"\");\r\n    const [show, setShow] = useState(false)\r\n\r\n    const CleraData = () => {\r\n        setShow(false);\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n    }\r\n\r\n    //================ Main_return_Function ================//\r\n    return (\r\n        <View style={styleForm.viewContainer}>\r\n            <Text style={styleForm.text}>\r\n                Simple Form in React Native\r\n            </Text>\r\n            {\r\n                show ?\r\n                    <View style={styleForm.formOpBox}>\r\n\r\n\r\n                        <Text>Name : {name}</Text>\r\n                        <Text>Email : {email}</Text>\r\n                        <Text>Passwaord : {passwaord}</Text>\r\n\r\n\r\n\r\n                    </View> : null\r\n            }\r\n\r\n            <View style={styleForm.formBox}>\r\n                <TextInput\r\n                    style={styleForm.formTextInput}\r\n                    placeholder='Enter User Name'\r\n                    value={name}\r\n                    onChangeText={(e) => setName(e)}\r\n                />\r\n                <TextInput\r\n                    style={styleForm.formTextInput}\r\n                    placeholder='Enter User Email'\r\n                    value={email}\r\n                    onChangeText={(e) => setEmail(e)}\r\n                />\r\n                <TextInput\r\n                    secureTextEntry={true} // In Ture condition not show ur passwaord\r\n                    style={styleForm.formTextInput}\r\n                    placeholder='Enter User Passwaord'\r\n                    value={passwaord}\r\n                    onChangeText={(e) => setPassword(e)}\r\n                />\r\n                <View style={styleForm.btnBox}>\r\n                    <Button\r\n                        title='Print Data'\r\n                        onPress={() => setShow(true)}\r\n                    />\r\n                </View>\r\n                <View style={styleForm.btnBox}>\r\n                    <Button\r\n                        title='clear Data'\r\n                        color={'red'}\r\n                        onPress={CleraData}\r\n                    />\r\n                </View>\r\n            </View>\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\n//================== Internal_ Css_Types =====================//\r\n\r\nconst styleForm = StyleSheet.create({\r\n    viewContainer: {\r\n        padding: 5,\r\n    },\r\n    formBox: {\r\n        marginTop: 10,\r\n        padding: 10,\r\n        borderColor: \"gray\",\r\n        borderWidth: 1,\r\n        elevation: 2\r\n    },\r\n    formOpBox: {\r\n        marginTop: 10,\r\n        padding: 10,\r\n        borderColor: \"gray\",\r\n        borderWidth: 1,\r\n        elevation: 2\r\n    },\r\n    text: {\r\n        alignSelf: \"center\",\r\n        textAlignVertical: \"center\",\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n        color: \"red\"\r\n    },\r\n    formTextInput: {\r\n        marginTop: 10,\r\n        borderColor: \"gray\",\r\n        borderWidth: 1,\r\n        fontSize: 15,\r\n        padding: 5,\r\n        textAlignVertical: \"center\"\r\n    },\r\n    btnBox: {\r\n        marginTop: 15\r\n    }\r\n})\r\n\r\nexport default NativeForm\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}