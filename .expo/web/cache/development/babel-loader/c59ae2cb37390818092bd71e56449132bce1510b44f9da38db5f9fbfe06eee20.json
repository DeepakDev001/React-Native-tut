{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar NativeProps = function NativeProps() {\n  var _useState = useState(\"Deepak\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    updateText = _useState2[0],\n    setUpdateText = _useState2[1];\n  var UpdateText = function UpdateText(props) {\n    return _jsxs(View, {\n      style: style.view,\n      children: [_jsxs(Text, {\n        style: style.updateText,\n        children: [\"Name: \", props.name]\n      }), _jsx(Button, {\n        title: \"Update Text\",\n        onPress: function onPress() {\n          return setUpdateText('Yadav');\n        }\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: style.viewContainer,\n    children: [_jsx(Text, {\n      style: style.text,\n      children: \"Props In React Native\"\n    }), _jsx(Text, {\n      children: \":- It is an Argument / paraments of own components\"\n    }), _jsx(Text, {\n      children: \":- when You send the data , one componets to another components the use the props\"\n    }), _jsx(Text, {\n      style: {\n        color: \"green\"\n      },\n      children: \"Note :-  is this possible send the data child to parent components? :- Yes  with the help of LeaftingUp State\"\n    }), _jsx(UpdateText, {\n      name: updateText\n    })]\n  });\n};\nvar style = StyleSheet.create({\n  viewContainer: {\n    padding: 5\n  },\n  text: {\n    alignSelf: \"center\",\n    textAlignVertical: \"center\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"red\"\n  },\n  view: {\n    marginTop: 5\n  },\n  updateText: {\n    fontSize: 15,\n    fontWeight: \"bold\"\n  }\n});\nexport default NativeProps;","map":{"version":3,"names":["React","useState","Button","StyleSheet","Text","View","jsxs","_jsxs","jsx","_jsx","NativeProps","_useState","_useState2","_slicedToArray","updateText","setUpdateText","UpdateText","props","style","view","children","name","title","onPress","viewContainer","text","color","create","padding","alignSelf","textAlignVertical","fontSize","fontWeight","marginTop"],"sources":["C:/Users/Deepak/Documents/GitHub/React-Native-tut/components/NativeProps.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, StyleSheet, Text, View } from 'react-native'\r\n\r\nconst NativeProps = () => {\r\n    const [updateText, setUpdateText] = useState(\"Deepak\")\r\n\r\n    const UpdateText = (props) => {\r\n        return (\r\n            <View style={style.view}>\r\n                <Text style={style.updateText}>Name: {props.name}</Text>\r\n                <Button\r\n                    title='Update Text'\r\n                    onPress={() => setUpdateText('Yadav')}\r\n                />\r\n            </View>\r\n        )\r\n    }\r\n\r\n    //=================== Main_Return_Function =====================//\r\n    return (\r\n        <View style={style.viewContainer}>\r\n            <Text style={style.text}>\r\n                Props In React Native\r\n            </Text>\r\n            <Text>:- It is an Argument / paraments of own components</Text>\r\n            <Text>:- when You send the data , one componets to another components the use the props</Text>\r\n            <Text style={{ color: \"green\" }}>\r\n                Note :-  is this possible send the data child to parent components? :- Yes  with the help of LeaftingUp State\r\n            </Text>\r\n            <UpdateText name={updateText} />\r\n        </View>\r\n    )\r\n}\r\n\r\n//================== Internal_ Css_Types =====================//\r\nconst style = StyleSheet.create({\r\n    viewContainer: {\r\n        padding: 5\r\n    },\r\n    text: {\r\n        alignSelf: \"center\",\r\n        textAlignVertical: \"center\",\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n        color: \"red\"\r\n    },\r\n    view: {\r\n        marginTop: 5\r\n    },\r\n    updateText: {\r\n        fontSize: 15,\r\n        fontWeight: \"bold\",\r\n    },\r\n})\r\nexport default NativeProps\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGvC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EACtB,IAAAC,SAAA,GAAoCV,QAAQ,CAAC,QAAQ,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhC,IAAMI,UAAU,GAAG,SAAbA,UAAUA,CAAIC,KAAK,EAAK;IAC1B,OACIV,KAAA,CAACF,IAAI;MAACa,KAAK,EAAEA,KAAK,CAACC,IAAK;MAAAC,QAAA,GACpBb,KAAA,CAACH,IAAI;QAACc,KAAK,EAAEA,KAAK,CAACJ,UAAW;QAAAM,QAAA,GAAC,QAAM,EAACH,KAAK,CAACI,IAAI;MAAA,CAAO,CAAC,EACxDZ,IAAA,CAACP,MAAM;QACHoB,KAAK,EAAC,aAAa;QACnBC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMR,aAAa,CAAC,OAAO,CAAC;QAAA;MAAC,CACzC,CAAC;IAAA,CACA,CAAC;EAEf,CAAC;EAGD,OACIR,KAAA,CAACF,IAAI;IAACa,KAAK,EAAEA,KAAK,CAACM,aAAc;IAAAJ,QAAA,GAC7BX,IAAA,CAACL,IAAI;MAACc,KAAK,EAAEA,KAAK,CAACO,IAAK;MAAAL,QAAA,EAAC;IAEzB,CAAM,CAAC,EACPX,IAAA,CAACL,IAAI;MAAAgB,QAAA,EAAC;IAAkD,CAAM,CAAC,EAC/DX,IAAA,CAACL,IAAI;MAAAgB,QAAA,EAAC;IAAiF,CAAM,CAAC,EAC9FX,IAAA,CAACL,IAAI;MAACc,KAAK,EAAE;QAAEQ,KAAK,EAAE;MAAQ,CAAE;MAAAN,QAAA,EAAC;IAEjC,CAAM,CAAC,EACPX,IAAA,CAACO,UAAU;MAACK,IAAI,EAAEP;IAAW,CAAE,CAAC;EAAA,CAC9B,CAAC;AAEf,CAAC;AAGD,IAAMI,KAAK,GAAGf,UAAU,CAACwB,MAAM,CAAC;EAC5BH,aAAa,EAAE;IACXI,OAAO,EAAE;EACb,CAAC;EACDH,IAAI,EAAE;IACFI,SAAS,EAAE,QAAQ;IACnBC,iBAAiB,EAAE,QAAQ;IAC3BC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBN,KAAK,EAAE;EACX,CAAC;EACDP,IAAI,EAAE;IACFc,SAAS,EAAE;EACf,CAAC;EACDnB,UAAU,EAAE;IACRiB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC;AACF,eAAetB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}